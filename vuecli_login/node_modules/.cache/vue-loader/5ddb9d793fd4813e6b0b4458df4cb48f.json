{"remainingRequest":"C:\\Users\\SkywillUser\\Desktop\\clone\\practice\\vuecli_login\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\SkywillUser\\Desktop\\clone\\practice\\vuecli_login\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\SkywillUser\\Desktop\\clone\\practice\\vuecli_login\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\SkywillUser\\Desktop\\clone\\practice\\vuecli_login\\src\\views\\Comments.vue?vue&type=template&id=646a562e&","dependencies":[{"path":"C:\\Users\\SkywillUser\\Desktop\\clone\\practice\\vuecli_login\\src\\views\\Comments.vue","mtime":1596612531646},{"path":"C:\\Users\\SkywillUser\\Desktop\\clone\\practice\\vuecli_login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\SkywillUser\\Desktop\\clone\\practice\\vuecli_login\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\SkywillUser\\Desktop\\clone\\practice\\vuecli_login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\SkywillUser\\Desktop\\clone\\practice\\vuecli_login\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"h3\", [_vm._v(\"掲示板に投稿する\")]),\n      _c(\"label\", { attrs: { for: \"name\" } }, [_vm._v(\"ニックネーム：\")]),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.name,\n            expression: \"name\"\n          }\n        ],\n        attrs: { id: \"name\", type: \"text\" },\n        domProps: { value: _vm.name },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.name = $event.target.value\n          }\n        }\n      }),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"label\", { attrs: { for: \"comment\" } }, [_vm._v(\"コメント：\")]),\n      _c(\"textarea\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.comment,\n            expression: \"comment\"\n          }\n        ],\n        attrs: { id: \"comment\" },\n        domProps: { value: _vm.comment },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.comment = $event.target.value\n          }\n        }\n      }),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"button\", { on: { click: _vm.createComment } }, [\n        _vm._v(\"コメントをサーバーに送る\")\n      ]),\n      _c(\"h2\", [_vm._v(\"掲示板\")]),\n      _vm._l(_vm.posts, function(post) {\n        return _c(\"div\", { key: post.name }, [\n          _c(\"br\"),\n          _c(\"div\", [_vm._v(\"名前：\" + _vm._s(post.fields.name.stringValue))]),\n          _c(\"div\", [\n            _vm._v(\"コメント：\" + _vm._s(post.fields.comment.stringValue))\n          ])\n        ])\n      })\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}